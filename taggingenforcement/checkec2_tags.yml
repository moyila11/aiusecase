---
- name: Check EC2 tags (report-only, no AWS collections)
  hosts: all
  gather_facts: false
  vars:
    aws_region: "us-east-1"
    required_tags:
      owner: "platform-team"
      environment: "production"
      cost_center: "CC1234"

  tasks:
    - name: Ensure AWS CLI is installed
      command: aws --version
      register: aws_cli_check
      ignore_errors: yes
      
    - name: Install AWS CLI
      ansible.builtin.yum:
        name: awscli
        state: present
      become: true

    - name: Fail if AWS CLI not installed
      fail:
        msg: "AWS CLI not found. Please install and configure it on this host."
      when: aws_cli_check.rc != 0

    - name: Get instance info by instance_id (if provided)
      command: >
        aws ec2 describe-instances
        --region {{ aws_region }}
        --instance-ids {{ ec2_instance_id }}
        --query "Reservations[].Instances[].Tags"
      register: ec2_tags_by_id
      when: ec2_instance_id is defined

    - name: Get instance info by private IP (if ec2_instance_id not provided)
      command: >
        aws ec2 describe-instances
        --region {{ aws_region }}
        --filters "Name=private-ip-address,Values={{ ec2_private_ip }}"
        --query "Reservations[].Instances[].Tags"
      register: ec2_tags_by_ip
      when:
        - ec2_instance_id is not defined
        - ec2_private_ip is defined

    - name: Set tags output
      set_fact:
        ec2_tags_output: "{{ ec2_tags_by_id.stdout | from_json if (ec2_instance_id is defined) else ec2_tags_by_ip.stdout | from_json }}"

    - name: Convert list of tags to dict
      set_fact:
        current_tags: "{{ dict(ec2_tags_output | map(attribute='Key') | list | zip(ec2_tags_output | map(attribute='Value') | list)) }}"

    - name: Compute missing tags
      set_fact:
        missing_tags: "{{ required_tags.keys() | difference((current_tags | default({})).keys()) | list }}"

    - name: Show compliance summary
      debug:
        msg: "Host={{ inventory_hostname }} Missing={{ missing_tags }} Current={{ current_tags }}"
